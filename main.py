import json
import websocket
import telebot

# üîπ API-–∫–ª—é—á–∏
telegram_token = "7849765435:AAGKSvUGXFmjTkxGFIphqiGIubinOedJvJg"
chat_id = "1466935078"
bot = telebot.TeleBot(telegram_token)

# üîπ WebSocket URL –¥–ª—è —Ñ—å—é—á–µ—Ä—Å–æ–≤ Bybit
BYBIT_WS_URL = "wss://stream.bybit.com/v5/public/linear"

# üîπ –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π WebSocket
def on_message(ws, message):
    data = json.loads(message)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
    if "topic" in data and "subscribe" in data["op"]:
        print("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–∞!")  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
        return  # –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π
    if "topic" in data and "liquidation" in data["topic"]:
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
        liquidation_data = data.get("data", {})

        if isinstance(liquidation_data, dict):  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å
            symbol = liquidation_data["symbol"]
            side = "üü• Short" if liquidation_data["side"] == "Sell" else "üü© Long"
            size = float(liquidation_data["size"])
            price = float(liquidation_data["price"])
            value = size * price  # –û–±—â–∞—è —Å—É–º–º–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –≤ USDT

            if value > 100000:  # –§–∏–ª—å—Ç—Ä –ø–æ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è–º > $100K
                msg = f"‚ö° –ö—Ä—É–ø–Ω–∞—è –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è {symbol}!\nüí∞ {side} –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ {value:.2f} USDT\nüìâ –¶–µ–Ω–∞: {price:.2f}"
                bot.send_message(chat_id, msg)
                print(msg)  # –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
        else:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {liquidation_data}")
    else:
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: {data}")

def on_error(ws, error):
    print(f"–û—à–∏–±–∫–∞ WebSocket: {error}")

def on_close(ws, close_status_code, close_msg):
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

def on_open(ws):
    print("üîó WebSocket –ø–æ–¥–∫–ª—é—á—ë–Ω! –û–∂–∏–¥–∞–µ–º –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏...")
    subscribe_msg = {
        "op": "subscribe",
        "args": ["liquidation.BTCUSDT", "liquidation.ETHUSDT", "liquidation.SOLUSDT"]
    }
    ws.send(json.dumps(subscribe_msg))

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket Bybit
ws = websocket.WebSocketApp(
    BYBIT_WS_URL,  
    on_message=on_message,
    on_error=on_error,
    on_close=on_close
)
ws.on_open = on_open
ws.run_forever()
